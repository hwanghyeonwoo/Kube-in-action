apiVersion: v1
kind: Pod
metadata:
  name: pod-with-shared-volume-fsgroup
spec:
  securityContext:
    fsGroup: 555
    supplementalGroups: [666, 777]
  containers:
  - name: first
    image: alpine
    command: ["/bin/sleep", "999999"]
    securityContext:
      runAsUser: 1111
    volumeMounts:
    - name: shared-volume
      mountPath: /volume
      readOnly: false
  - name: second
    image: alpine
    command: ["/bin/sleep", "999999"]
    securityContext:
      runAsUser: 2222
    volumeMounts:
    - name: shared-volume
      mountPath: /volume
      readOnly: false
  volumes:
  - name: shared-volume
    emptyDir:

#spec.securityContext 파드 레벨의 보안 컨텍스트에서 정의
# 첫 번째 컨테이너는 UID 1111로 실행
# 두 번째 컨테이너는 UID 2222로 실행
#두 컨테이너 모두 하나의 볼륨을 사용
#서로 다른 유저로 실행될경우, 어떤 유저더라도 권한에 관계없이 하나의 볼륨을 공유할 수 있다.

#실습
#kubectl exec -it pod-with-shared-volume-fsgroup -c first sh
#ls -l / | group volume
#echo foo > /volume/foo
#ls -l /volume

#echo foo > /tmp/foo
#ls -l /tmp
#볼륨에 파일 작성 시 소유권 gid:fsGroup 1111:555  // 일반 폴더에 파일 작성시 uid:gid 1111:0(root)

#securityContext 속성을 통해 유저에 관계없이 하나의 fsGroup으로 속하게 되어 수정 가능 